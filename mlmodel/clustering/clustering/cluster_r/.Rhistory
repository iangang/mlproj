knitr::opts_chunk$set(echo = TRUE)
# data
iris = datasets::iris
# split data and label
iris2 = iris[, -5]
species_labels = iris[, 5]
# get nice colors
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
species_col
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
knitr::opts_chunk$set(echo = TRUE)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
# data
iris = datasets::iris
# split data and label
iris2 = iris[, -5]
species_labels = iris[, 5]
# get nice colors
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM
pairs(iris2,
col = species_labels,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2)
# Plot a SPLOM
pairs(iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2)
as.character(levels(species_labels))
# Add a legend
par(xpd = TRUE)
legend(x = 0.05,
y = 0.4,
cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
# data
iris = datasets::iris
# split data and label
iris2 = iris[, -5]
species_labels = iris[, 5]
# get nice colors
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM
pairs(iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2)
# Add a legend
par(xpd = TRUE)
legend(x = 0.05,
y = 0.4,
cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = NA)
legend(x = 0.05,
y = 0.4,
cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = TRUE)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = NA)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
?legend
unique(species_col)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
# data
iris = datasets::iris
# split data and label
iris2 = iris[, -5]
# get nice colors
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM
pairs(iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2)
# par(xpd = TRUE)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
iris = datasets::iris
# split data and label
iris2 = iris[, -5]
species_labels = iris[, 5]
# get nice colors
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
pairs(iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = TRUE)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = NA)
knitr::opts_chunk$set(echo = TRUE)
par(las = 1,
mar = c(4.5, 3, 3, 2) + 0.1,
cex = 0.8)
MASS::parcoord(iris2,
col = species_col,
var.label = TRUE,
lwd = 2)
## Add Title
title("Parallel coordinates plot of the Iris data")
?rev
iris_species = rev(levels(species_labels))
iris_species
?hclust
# 计算距离
d_iris = dist(iris2)
# 层次聚类
hc_iris = hclust(d_iris, method = "complete")
iris_species = rev(levels(species_labels))
library(dendextend)
install.packages("mclust")
library(dendextend)
install.packages("diptest")
library(dendextend)
install.packages("circlize")
# install.packages("d3heatmap")
library(d3heatmap)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
head(nba_players)
d3heatmap(nba_players, scale = "column")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = "Blues")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = scales::col_quantile("Blues", NULL, 5))
d3heatmap(nba_players, colors = "Blues", scale = "col", endrogram = "row", k_row = 3)
install.packages("d3heatmap")
# install.packages("d3heatmap")
library(d3heatmap)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
head(nba_players)
d3heatmap(nba_players, scale = "column")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = "Blues")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = scales::col_quantile("Blues", NULL, 5))
d3heatmap(nba_players, colors = "Blues", scale = "col", endrogram = "row", k_row = 3)
# install.packages("d3heatmap")
library(d3heatmap)
install.packages("png")
# install.packages("d3heatmap")
library(d3heatmap)
# install.packages("d3heatmap")
library(d3heatmap)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
head(nba_players)
d3heatmap(nba_players, scale = "column")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = "Blues")
d3heatmap(nba_players, scale = "column", dendrogram = "none", color = scales::col_quantile("Blues", NULL, 5))
d3heatmap(nba_players, colors = "Blues", scale = "col", endrogram = "row", k_row = 3)
## K-means
set.seed(0)
df = rbind(x = matrix(rnorm(100, 0.5, 4.5), ncol = 2),
y = matrix(rnorm(100, 0.5, 0.1), ncol = 2))
df
df = rbind(matrix(rnorm(100, 0.5, 4.5), ncol = 2),
matrix(rnorm(100, 0.5, 0.1), ncol = 2))
df
colnames(df) = c("x", "y")
df
# clustering
cl = kmeans(df, 2)
cl
install.packages("flexclust")
library(flexclust)
if(!require(flexclust)) install.packages("flexclust")
!require(flexclust)
require(flexclust)
clk = kcca(df, k = 2)
clk
clk = flexclust::kcca(df, k = 2)
clk
clk@centers
summary(clk)
summary(clk)
plot(df, col = cl$cluster, main = "K-means Cluster")
plot(df, col = cl$cluster, main = "K-means Cluster")
points(cl$centers, col = 1:3, pch = 10, cex = 4)
points(clk@centers, col = 3:4, pch = 10, cex = 4)
df = iris[:, -5]
iris[:, -5]
df = iris[, -5]
df
# data
set.seed(0)
df = iris[, -5]
# clustering
cl = kmeans(df, 3)
cl
if(!require(flexclust)) install.packages("flexclust")
clk = flexclust::kcca(df, k = 2)
clk
clk = flexclust::kcca(df, k = 3)
clk
clk@centers
summary(clk)
plot(df, col = cl$cluster, main = "K-means Cluster")
points(cl$centers, col = 1:3, pch = 10, cex = 4)
points(clk@centers, col = 3:4, pch = 10, cex = 4)
